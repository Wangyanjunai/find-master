<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.potato369.find.mbg.mapper.MessageMapper">
    <resultMap id="BaseResultMap" type="com.potato369.find.mbg.model.Message">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="send_user_id" jdbcType="BIGINT" property="sendUserId"/>
        <result column="recipient_user_id" jdbcType="BIGINT" property="recipientUserId"/>
        <result column="send_mode" jdbcType="CHAR" property="sendMode"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="reserve_column01" jdbcType="VARCHAR" property="reserveColumn01"/>
        <result column="reserve_column02" jdbcType="VARCHAR" property="reserveColumn02"/>
        <result column="reserve_column03" jdbcType="VARCHAR" property="reserveColumn03"/>
        <result column="reserve_column04" jdbcType="VARCHAR" property="reserveColumn04"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.potato369.find.mbg.model.Message">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <resultMap type="com.potato369.find.mbg.model.LikesRecord" id="LikesRecordMap">
    	<result column="likes_user_id" jdbcType="BIGINT" property="likesUserId"/>
        <result column="likes_create_time" jdbcType="TIMESTAMP" property="likesCreateTime"/>
        <result column="dyinfo_id" jdbcType="BIGINT" property="dynamicInfoId"/>
    </resultMap>
    <resultMap type="com.potato369.find.mbg.model.NotLikesMessageRecord" id="UnLikesRecordMap">
    	<result column="content" jdbcType="VARCHAR" property="messageContent"/>
        <result column="send_user_id" jdbcType="BIGINT" property="sendUserId"/>
        <result column="head_icon" jdbcType="VARCHAR" property="sendUserHead"/>
        <result column="nick_name" jdbcType="VARCHAR" property="sendUserNickname"/>
    </resultMap>
    <resultMap type="com.potato369.find.mbg.model.LikesMessageRecord" id="LikesMessageRecordMap">
    	<result column="id" jdbcType="BIGINT" property="userId"/>
        <result column="head_icon" jdbcType="VARCHAR" property="headIcon"/>
    	<result column="content" jdbcType="VARCHAR" property="likesContent"/>
        <result column="attache_type" jdbcType="CHAR" property="attacheType"/>
        <result column="file_name" jdbcType="VARCHAR" property="attacheFilename"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, send_user_id, recipient_user_id, send_mode, status, create_time, update_time, reserve_column01,
    reserve_column02, reserve_column03, reserve_column04
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.potato369.find.mbg.model.MessageExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.potato369.find.mbg.model.MessageExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from message
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectLikesRecordByUserId" parameterType="java.lang.Long" resultMap="LikesRecordMap">
        select
			lr.`user_id` as `likes_user_id`,
			lr.`create_time` as `likes_create_time`,
			di.`id` as `dyinfo_id` 
		from
			`like_record` lr,
			`dynamic_info` di,
			`user` ur
		where
			lr.`dynamic_info_id` = di.`id`
			and di.`user_id` = ur.`id`
			and ur.`id` = #{userId, jdbcType=BIGINT}
		order by
			lr.`create_time` desc
    </select>
    <select id="selectUnLikesRecordByUserId" parameterType="java.lang.Long" resultMap="UnLikesRecordMap">
		SELECT
		    DISTINCT
			me.`content`,
			me.`send_user_id`,
			user.`head_icon`,
			user.`nick_name`
		FROM
			`message` me,
			`user` user
		WHERE 
			1<![CDATA[=]]>1
			AND	me.`send_user_id`<![CDATA[=]]>user.`id`
			AND me.`reserve_column01`<![CDATA[!=]]>'likes'
			AND me.`recipient_user_id`<![CDATA[=]]>#{userId, jdbcType=BIGINT}
			AND me.`status`<![CDATA[=]]>'0'
		ORDER BY
			me.`create_time` DESC, me.`update_time` DESC
    </select>
    <select id="selectLikesMessageRecordByUserId" parameterType="java.lang.Long" resultMap="LikesMessageRecordMap">
		SELECT
			DISTINCT
			user.`id`,
			user.`head_icon`,
			me.`content`,
			dynamic.`attache_type`,
			attache.`file_name` 
		FROM
			`message` me,
			`user` user,
			`like_record` record,
			`dynamic_info` dynamic,
			`attache_info` attache 
		WHERE
				1<![CDATA[=]]>1
			AND me.`send_user_id`<![CDATA[=]]>user.`id` 
			AND record.`user_id`<![CDATA[=]]>me.`send_user_id` 
			AND record.`dynamic_info_id`<![CDATA[=]]>dynamic.`id` 
			AND dynamic.id<![CDATA[=]]>attache.dynamic_info_by 
			AND me.`reserve_column01`<![CDATA[=]]>'likes' 
			AND me.`recipient_user_id`<![CDATA[=]]>#{userId, jdbcType=BIGINT}
			AND me.`status`<![CDATA[=]]>'0'
			AND record.`status`<![CDATA[=]]>'0' 
		ORDER BY
			me.`create_time` DESC,
			me.`update_time` DESC
    </select>        
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from message
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.potato369.find.mbg.model.MessageExample">
        delete from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.potato369.find.mbg.model.Message">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into message (send_user_id, recipient_user_id, send_mode, status
        create_time, update_time, reserve_column01,
        reserve_column02, reserve_column03, reserve_column04,
        content)
        values (#{sendUserId,jdbcType=BIGINT}, #{recipientUserId,jdbcType=BIGINT}, #{sendMode,jdbcType=CHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{reserveColumn01,jdbcType=VARCHAR},
        #{reserveColumn02,jdbcType=VARCHAR}, #{reserveColumn03,jdbcType=VARCHAR}, #{reserveColumn04,jdbcType=VARCHAR},
        #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.potato369.find.mbg.model.Message">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sendUserId != null">
                send_user_id,
            </if>
            <if test="recipientUserId != null">
                recipient_user_id,
            </if>
            <if test="sendMode != null">
                send_mode,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="reserveColumn01 != null">
                reserve_column01,
            </if>
            <if test="reserveColumn02 != null">
                reserve_column02,
            </if>
            <if test="reserveColumn03 != null">
                reserve_column03,
            </if>
            <if test="reserveColumn04 != null">
                reserve_column04,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sendUserId != null">
                #{sendUserId,jdbcType=BIGINT},
            </if>
            <if test="recipientUserId != null">
                #{recipientUserId,jdbcType=BIGINT},
            </if>
            <if test="sendMode != null">
                #{sendMode,jdbcType=CHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reserveColumn01 != null">
                #{reserveColumn01,jdbcType=VARCHAR},
            </if>
            <if test="reserveColumn02 != null">
                #{reserveColumn02,jdbcType=VARCHAR},
            </if>
            <if test="reserveColumn03 != null">
                #{reserveColumn03,jdbcType=VARCHAR},
            </if>
            <if test="reserveColumn04 != null">
                #{reserveColumn04,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.potato369.find.mbg.model.MessageExample" resultType="java.lang.Long">
        select count(*) from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update message
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.sendUserId != null">
                send_user_id = #{record.sendUserId,jdbcType=BIGINT},
            </if>
            <if test="record.recipientUserId != null">
                recipient_user_id = #{record.recipientUserId,jdbcType=BIGINT},
            </if>
            <if test="record.sendMode != null">
                send_mode = #{record.sendMode,jdbcType=CHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=CHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reserveColumn01 != null">
                reserve_column01 = #{record.reserveColumn01,jdbcType=VARCHAR},
            </if>
            <if test="record.reserveColumn02 != null">
                reserve_column02 = #{record.reserveColumn02,jdbcType=VARCHAR},
            </if>
            <if test="record.reserveColumn03 != null">
                reserve_column03 = #{record.reserveColumn03,jdbcType=VARCHAR},
            </if>
            <if test="record.reserveColumn04 != null">
                reserve_column04 = #{record.reserveColumn04,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update message
        set id = #{record.id,jdbcType=BIGINT},
        send_user_id = #{record.sendUserId,jdbcType=BIGINT},
        recipient_user_id = #{record.recipientUserId,jdbcType=BIGINT},
        send_mode = #{record.sendMode,jdbcType=CHAR},
        status = #{record.status,jdbcType=CHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        reserve_column01 = #{record.reserveColumn01,jdbcType=VARCHAR},
        reserve_column02 = #{record.reserveColumn02,jdbcType=VARCHAR},
        reserve_column03 = #{record.reserveColumn03,jdbcType=VARCHAR},
        reserve_column04 = #{record.reserveColumn04,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update message
        set id = #{record.id,jdbcType=BIGINT},
        send_user_id = #{record.sendUserId,jdbcType=BIGINT},
        recipient_user_id = #{record.recipientUserId,jdbcType=BIGINT},
        send_mode = #{record.sendMode,jdbcType=CHAR},
        status = #{record.status,jdbcType=CHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        reserve_column01 = #{record.reserveColumn01,jdbcType=VARCHAR},
        reserve_column02 = #{record.reserveColumn02,jdbcType=VARCHAR},
        reserve_column03 = #{record.reserveColumn03,jdbcType=VARCHAR},
        reserve_column04 = #{record.reserveColumn04,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.potato369.find.mbg.model.Message">
        update message
        <set>
            <if test="sendUserId != null">
                send_user_id = #{sendUserId,jdbcType=BIGINT},
            </if>
            <if test="recipientUserId != null">
                recipient_user_id = #{recipientUserId,jdbcType=BIGINT},
            </if>
            <if test="sendMode != null">
                send_mode = #{sendMode,jdbcType=CHAR},
            </if>
            <if test="sendMode != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reserveColumn01 != null">
                reserve_column01 = #{reserveColumn01,jdbcType=VARCHAR},
            </if>
            <if test="reserveColumn02 != null">
                reserve_column02 = #{reserveColumn02,jdbcType=VARCHAR},
            </if>
            <if test="reserveColumn03 != null">
                reserve_column03 = #{reserveColumn03,jdbcType=VARCHAR},
            </if>
            <if test="reserveColumn04 != null">
                reserve_column04 = #{reserveColumn04,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.potato369.find.mbg.model.Message">
        update message
        set send_user_id      = #{sendUserId,jdbcType=BIGINT},
            recipient_user_id = #{recipientUserId,jdbcType=BIGINT},
            send_mode         = #{sendMode,jdbcType=CHAR},
            status         	  = #{status,jdbcType=CHAR},
            create_time       = #{createTime,jdbcType=TIMESTAMP},
            update_time       = #{updateTime,jdbcType=TIMESTAMP},
            reserve_column01  = #{reserveColumn01,jdbcType=VARCHAR},
            reserve_column02  = #{reserveColumn02,jdbcType=VARCHAR},
            reserve_column03  = #{reserveColumn03,jdbcType=VARCHAR},
            reserve_column04  = #{reserveColumn04,jdbcType=VARCHAR},
            content           = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.potato369.find.mbg.model.Message">
        update message
        set send_user_id      = #{sendUserId,jdbcType=BIGINT},
            recipient_user_id = #{recipientUserId,jdbcType=BIGINT},
            send_mode         = #{sendMode,jdbcType=CHAR},
            status            = #{status,jdbcType=CHAR},
            create_time       = #{createTime,jdbcType=TIMESTAMP},
            update_time       = #{updateTime,jdbcType=TIMESTAMP},
            reserve_column01  = #{reserveColumn01,jdbcType=VARCHAR},
            reserve_column02  = #{reserveColumn02,jdbcType=VARCHAR},
            reserve_column03  = #{reserveColumn03,jdbcType=VARCHAR},
            reserve_column04  = #{reserveColumn04,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>